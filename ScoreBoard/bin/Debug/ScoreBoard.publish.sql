/*
Deployment script for ScoreBoard_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ScoreBoard_1"
:setvar DefaultFilePrefix "ScoreBoard_1"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Creating [dbo].[Player]...';


GO
CREATE TABLE [dbo].[Player] (
    [PlayerID]  INT          IDENTITY (1, 1) NOT NULL,
    [FirstName] VARCHAR (48) NULL,
    [LastName]  VARCHAR (48) NULL,
    PRIMARY KEY CLUSTERED ([PlayerID] ASC)
);


GO
PRINT N'Creating [dbo].[ScoreLookUp]...';


GO
CREATE TABLE [dbo].[ScoreLookUp] (
    [ScoreLookUpID] INT IDENTITY (1, 1) NOT NULL,
    [PlayerID]      INT NOT NULL,
    [ScoreID]       INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ScoreLookUpID] ASC)
);


GO
PRINT N'Creating [dbo].[Score]...';


GO
CREATE TABLE [dbo].[Score] (
    [ScoreID]   INT          IDENTITY (1, 1) NOT NULL,
    [ScoreName] VARCHAR (48) NOT NULL,
    PRIMARY KEY CLUSTERED ([ScoreID] ASC)
);


GO
PRINT N'Creating [dbo].[ScoreCategory]...';


GO
CREATE TABLE [dbo].[ScoreCategory] (
    [ScoreCategoryID] INT          IDENTITY (1, 1) NOT NULL,
    [Category]        VARCHAR (48) NOT NULL,
    [ScoreID]         INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([ScoreCategoryID] ASC)
);


GO
PRINT N'Creating [dbo].[Friends]...';


GO
CREATE TABLE [dbo].[Friends] (
    [PlayerID] INT NOT NULL,
    [FriendID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([PlayerID] ASC, [FriendID] ASC)
);


GO
PRINT N'Creating [dbo].[ScoreGroup]...';


GO
CREATE TABLE [dbo].[ScoreGroup] (
    [ScoreGroupID] INT IDENTITY (1, 1) NOT NULL,
    [PlayerID]     INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ScoreGroupID] ASC)
);


GO
PRINT N'Creating [dbo].[ScoreGroupName]...';


GO
CREATE TABLE [dbo].[ScoreGroupName] (
    [ScoreGroupNameID] INT          IDENTITY (1, 1) NOT NULL,
    [ScoreGroupID]     INT          NOT NULL,
    [NameOfScoreGroup] VARCHAR (48) NULL,
    PRIMARY KEY CLUSTERED ([ScoreGroupNameID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_ScoreLookUp_PlayerID]...';


GO
ALTER TABLE [dbo].[ScoreLookUp]
    ADD CONSTRAINT [FK_ScoreLookUp_PlayerID] FOREIGN KEY ([PlayerID]) REFERENCES [dbo].[Player] ([PlayerID]);


GO
PRINT N'Creating [dbo].[FK_ScoreLookUp_ScoreID]...';


GO
ALTER TABLE [dbo].[ScoreLookUp]
    ADD CONSTRAINT [FK_ScoreLookUp_ScoreID] FOREIGN KEY ([ScoreID]) REFERENCES [dbo].[Score] ([ScoreID]);


GO
PRINT N'Creating [dbo].[FK_ScoreCategory_ToScore]...';


GO
ALTER TABLE [dbo].[ScoreCategory]
    ADD CONSTRAINT [FK_ScoreCategory_ToScore] FOREIGN KEY ([ScoreID]) REFERENCES [dbo].[Score] ([ScoreID]);


GO
PRINT N'Creating [dbo].[FK_Friends_PlayerID]...';


GO
ALTER TABLE [dbo].[Friends]
    ADD CONSTRAINT [FK_Friends_PlayerID] FOREIGN KEY ([PlayerID]) REFERENCES [dbo].[Player] ([PlayerID]);


GO
PRINT N'Creating [dbo].[FK_Friends_FriendID]...';


GO
ALTER TABLE [dbo].[Friends]
    ADD CONSTRAINT [FK_Friends_FriendID] FOREIGN KEY ([FriendID]) REFERENCES [dbo].[Player] ([PlayerID]);


GO
PRINT N'Creating [dbo].[FK_ScoreGroup_ToPlayer]...';


GO
ALTER TABLE [dbo].[ScoreGroup]
    ADD CONSTRAINT [FK_ScoreGroup_ToPlayer] FOREIGN KEY ([PlayerID]) REFERENCES [dbo].[Player] ([PlayerID]);


GO
PRINT N'Creating [dbo].[FK_ScoreGroupName_ToScoreGroup]...';


GO
ALTER TABLE [dbo].[ScoreGroupName]
    ADD CONSTRAINT [FK_ScoreGroupName_ToScoreGroup] FOREIGN KEY ([ScoreGroupID]) REFERENCES [dbo].[ScoreGroup] ([ScoreGroupID]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

MERGE
INTO Player AS Target
USING (VALUES
(1, 'Max', 'Rodderick'),
(2, 'John', 'Joe')
)
AS Source (PlayerID, FirstName, LastName)
ON Target.PlayerID = Source.PlayerID
WHEN NOT MATCHED BY TARGET
	THEN INSERT (FirstName, LastName)
			VALUES (FirstName, LastName);

MERGE
INTO Score AS Target
USING (VALUES
(1, '24'),
(2, '5 hours'),
(3, '100'),
(4, '10'),
(5, '50'),
(6, '50'),
(7, '8 hours'),
(8, '200'),
(9, '5'),
(10, '25')
)
AS Source (ScoreID, ScoreName)
ON Target.ScoreID = Source.ScoreID
WHEN NOT MATCHED BY TARGET
	THEN INSERT (ScoreName)
			VALUES (ScoreName);

MERGE
INTO ScoreLookUp AS Target
USING (VALUES
(1, 1, 1),
(2, 1, 2),
(3, 1, 3),
(4, 1, 4),
(5, 1, 5),
(6, 2, 1),
(7, 2, 2),
(8, 2, 3),
(9, 2, 4),
(10, 2, 5)
)
AS Source (ScoreLookUpID, PlayerID, ScoreID)
ON Target.ScoreLookUpID = Source.ScoreLookUpID
WHEN NOT MATCHED BY TARGET
	THEN INSERT (PlayerID, ScoreID)
			VALUES (PlayerID, ScoreID);

MERGE
INTO ScoreCategory AS Target
USING (VALUES
(1, 'Monsters Slayen', 1),
(2, 'Completion Time', 2),
(3, 'Overall Score', 3),
(4, 'Death Count', 4),
(5, 'Total Achievements', 5))
AS Source (ScoreCategoryID, Category, ScoreID)
ON Target.ScoreCategoryID = Source.ScoreCategoryID
WHEN NOT MATCHED BY TARGET
	THEN INSERT (Category, ScoreID)
			VALUES (Category, ScoreID);

MERGE
INTO Friends AS Target
USING (VALUES
(1, 2),
(2, 1)
)
AS Source (PlayerID, FriendID)
ON Target.PlayerID = Source.PlayerID
WHEN NOT MATCHED BY TARGET
	THEN INSERT (PlayerID, FriendID)
			VALUES (PlayerID, FriendID);

MERGE
INTO ScoreGroup AS Target
USING (VALUES
(1, 1),
(2, 2)
)
AS Source (ScoreGroupID, PlayerID)
ON Target.ScoreGroupID = Source.ScoreGroupID
WHEN NOT MATCHED BY TARGET
	THEN INSERT (PlayerID)
			VALUES (PlayerID);

MERGE
INTO ScoreGroupName AS Target
USING (VALUES
(1, 1, 'East US'),
(2, 2, 'East US')
--(3, 5, 'West US'),
--(4, 3, 'Central US'),
--(5, 4, 'All of US')
)
AS Source (ScoreGroupNameID, ScoreGroupID, NameOfScoreGroup)
ON Target.ScoreGroupNameID = Source.ScoreGroupNameID
WHEN NOT MATCHED BY TARGET
	THEN INSERT (ScoreGroupID, NameOfScoreGroup)
			VALUES (ScoreGroupID, NameOfScoreGroup);
GO

GO
PRINT N'Update complete.';


GO
